Top Level Functions in Impl Classes
-----------------------------------

These are the individual functions that implement the high level
xframe, xarray, and sketch APIs.

Sketch:    __init__(self):
Sketch:    construct_from_xarray(self, xa, background=None, sub_sketch_keys=None):
Sketch:    size(self):
Sketch:    max(self):
Sketch:    min(self):
Sketch:    sum(self):
Sketch:    mean(self):
Sketch:    var(self):
Sketch:    num_undefined(self):
Sketch:    num_unique(self):
Sketch:    frequent_items(self):
Sketch:    get_quantile(self, quantile_val):
Sketch:    frequency_count(self, element):
Sketch:    sketch_ready(self):
Sketch:    num_elements_processed(self):
Sketch:    element_length_summary(self):
Sketch:    dict_key_summary(self):
Sketch:    dict_value_summary(self):
Sketch:    element_summary(self):
Sketch:    element_sub_sketch(self, keys):
Sketch:    cancel(self):

XArray:    __init__(self, rdd=None, elem_type=None):
XArray:    create_sequential_xarray(size, start, reverse):
XArray:    load_from_iterable(self, values, dtype, ignore_cast_failure):
XArray:    load_from_const(self, value, size):
XArray:    load_autodetect(self, path, dtype):
XArray:    get_content_identifier(self):
XArray:    save(self, path):
XArray:    save_as_text(self, path):
XArray:    to_rdd(number_of_partitions):
XArray:    size(self):
XArray:    dtype(self):
XArray:    head(self, n):
XArray:    head_as_list(self, n):
XArray:    tail(self, n):
XArray:    topk_index(self, topk, reverse):
XArray:    materialize(self):
XArray:    is_materialized(self):
XArray:    begin_iterator(self):
XArray:    iterator_get_next(self, elems_at_a_time):
XArray:    vector_operator(self, other, op):
XArray:    left_scalar_operator(self, other, op):
XArray:    right_scalar_operator(self, other, op):
XArray:    sample(self, fraction, seed):
XArray:    logical_filter(self, other):
XArray:    copy_range(self, start, step, stop):
XArray:    vector_slice(self, start, end):
XArray:    filter(self, fn, skip_undefined, seed):
XArray:    drop_missing_values(self):
XArray:    append(self, other):
XArray:    transform(self, fn, dtype, skip_undefined, seed):
XArray:    astype(self, dtype, undefined_on_failure):
XArray:    clip(self, lower, upper):
XArray:    fill_missing_values(self, value):
XArray:    unpack(self, column_name_prefix, limit, column_types, na_value):
XArray:    sort(self, ascending):
XArray:    unique(self):
XArray:    all(self):
XArray:    any(self):
XArray:    max(self):
XArray:    min(self):
XArray:    sum(self):
XArray:    mean(self):
XArray:    (self, ddof):
XArray:    var(self, ddof):
XArray:    num_missing(self):
XArray:    nnz(self):
XArray:    item_length(self):
XArray:    expand(self, column_name_prefix, limit, column_types):
XArray:    datetime_to_str(self, str_format):
XArray:    str_to_datetime(self, str_format):
XArray:    count_bag_of_words(self, options):
XArray:    count_ngrams(self, n, options):
XArray:    count_character_ngrams(self, n, options):
XArray:    dict_trim_by_keys(self, keys, exclude):
XArray:    dict_trim_by_values(self, lower, upper):
XArray:    dict_keys(self):
XArray:    dict_values(self):
XArray:    dict_has_any_keys(self, keys):
XArray:    dict_has_all_keys(self, keys):

XFrame:    __init__(self, rdd=None, col_names=None, column_types=None):
XFrame:    load_from_dataframe(self, data):
XFrame:    load_from_xframe_index(self, path):
XFrame:    load_from_csv(self, path, parsing_config, type_hints):
XFrame:    save(self, path):
XFrame:    save_as_csv(self, url, **args):
XFrame:    dump_debug_info(self):
XFrame:    to_schema_rdd(self, number_of_partitions):
XFrame:    to_rdd(self, number_of_partitions):
XFrame:    width(self):
XFrame:    num_rows(self):
XFrame:    num_columns(self):
XFrame:    column_names(self):
XFrame:    dtype(self):
XFrame:    head(self, n):
XFrame:    head_as_list(self, n):
XFrame:    tail(self, n):
XFrame:    sample(self, fraction, seed):
XFrame:    random_split(self, fraction, seed):
XFrame:    materialize(self):
XFrame:    is_materialized(self):
XFrame:    has_size(self):
XFrame:    select_column(self, column_name):
XFrame:    select_columns(self, keylist):
XFrame:    add_column(self, data, name):
XFrame:    add_columns_array(self, cols, namelist):
XFrame:    add_columns_frame(self, other):
XFrame:    remove_column(self, name):
XFrame:    remove_columns(self, col_names):
XFrame:    swap_columns(self, column_1, column_2):
XFrame:    set_column_name(self, old_name, new_name):
XFrame:    begin_iterator(self):
XFrame:    iterator_get_next(self, elems_at_a_time):
XFrame:    replace_single_column(self, col):
XFrame:    replace_selected_column(self, column_name, col):
XFrame:    flat_map(self, fn, column_names, column_types, seed):
XFrame:    logical_filter(self, other):
XFrame:    stack_list(self, column_name, new_column_names, new_column_types, drop_na):
XFrame:    stack_dict(self, column_name, new_column_names, new_column_types, drop_na):
XFrame:    append(self, other):
XFrame:    copy_range(self, start, step, stop):
XFrame:    drop_missing_values(self, columns, all_behavior, split):
XFrame:    add_row_number(self, column_name, start):
XFrame:    pack_columns(self, columns, dict_keys, dtype, fill_na):
XFrame:    transform(self, fn, dtype, seed):
XFrame:    groupby_aggregate(self, key_columns_array, group_columns, group_output_columns, group_ops):
XFrame:    join(self, right, how, join_keys):
XFrame:    unique(self):
XFrame:    sort(self, sort_column_names, sort_column_orders):
